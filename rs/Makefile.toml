[config]
default_to_workspace = false

[env]
#CARGO_MAKE_EXTEND_WORKSPACE_MAKEFILE = false
OS_NAME = "MY OS"
DISK_IMG = "./disk.img"
MOUNT_POINT = "./mnt"
DEVENV_DIR = "/osbook/devenv"
EFI_FILE = "./target/x86_64-unknown-uefi/release/bootloader.efi"
KERNEL_FILE = "./target/x86_64-unknown-elf/release/kernel.elf"

[tasks.default]
alias = "build"

[tasks.run]
dependencies = ["build", "make_image", "run_image"]

[tasks.clean]
script = '''
cargo clean
rm -r $MOUNT_POINT
rm $DISK_IMG
'''

[tasks.build]
dependencies = ["bootloader", "kernel"]
clear = true

[tasks.bootloader]
command = "cargo"
args = [
    "-Z", "unstable-options",
    "-C", "./bootloader",
    "build", "--release"]

[tasks.kernel]
command = "cargo"
args = [
    "-Z", "unstable-options",
    "-C", "./kernel",
    "build", "--release"]

[tasks.make_image]
script = '''
rm -f $DISK_IMG
qemu-img create -f raw $DISK_IMG 200M
mkfs.fat -n '$OS_NAME' -s 2 -f 2 -R 32 -F 32 $DISK_IMG
mkdir -p $MOUNT_POINT
sudo mount -o loop $DISK_IMG $MOUNT_POINT
sudo mkdir -p $MOUNT_POINT/EFI/BOOT
sudo cp $EFI_FILE $MOUNT_POINT/EFI/BOOT/BOOTX64.EFI
sudo cp $KERNEL_FILE $MOUNT_POINT/
sudo umount $MOUNT_POINT
'''

[tasks.run_image]
script = '''
qemu-system-x86_64 \
    -m 1G \
    -drive if=pflash,format=raw,readonly=on,file=$DEVENV_DIR/OVMF_CODE.fd \
    -drive if=pflash,format=raw,file=$DEVENV_DIR/OVMF_VARS.fd \
    -drive if=ide,index=0,media=disk,format=raw,file=$DISK_IMG \
    -device nec-usb-xhci,id=xhci \
    -device usb-mouse -device usb-kbd \
    -monitor stdio \
'''